{"version":3,"sources":["webpack://informed/webpack/universalModuleDefinition","webpack://informed/webpack/bootstrap","webpack://informed/./node_modules/node-libs-browser/node_modules/process/browser.js","webpack://informed/./src/debug.js","webpack://informed/./src/Context.js","webpack://informed/./src/ObjectMap.js","webpack://informed/./src/FormController.js","webpack://informed/./src/hooks/useForm.js","webpack://informed/./src/components/Form.js","webpack://informed/./src/hooks/useFormApi.js","webpack://informed/./src/hooks/useFormState.js","webpack://informed/./src/components/Scope.js","webpack://informed/./src/components/ArrayField.js","webpack://informed/./src/components/FormProvider.js","webpack://informed/./src/HOC/withFormApi.js","webpack://informed/./src/HOC/withFormState.js","webpack://informed/./src/hooks/useFieldApi.js","webpack://informed/./src/hooks/useFieldState.js","webpack://informed/./src/HOC/withFieldState.js","webpack://informed/./src/HOC/withFieldApi.js","webpack://informed/./src/HOC/withRadioGroup.js","webpack://informed/./src/hooks/useField.js","webpack://informed/./src/HOC/asField.js","webpack://informed/./src/components/form-fields/Text.js","webpack://informed/./src/components/form-fields/Radio.js","webpack://informed/./src/components/form-fields/TextArea.js","webpack://informed/./src/components/form-fields/Select.js","webpack://informed/./src/components/form-fields/Option.js","webpack://informed/./src/components/form-fields/Checkbox.js","webpack://informed/./src/components/form-fields/RadioGroup.js","webpack://informed/./src/index.js","webpack://informed/external \"events\"","webpack://informed/external \"lodash/get\"","webpack://informed/external \"lodash/has\"","webpack://informed/external \"lodash/pull\"","webpack://informed/external \"lodash/pullAt\"","webpack://informed/external \"lodash/setWith\"","webpack://informed/external \"lodash/toPath\"","webpack://informed/external \"lodash/unset\"","webpack://informed/external \"lodash/values\"","webpack://informed/external \"react\""],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","formatNodeArgs","config","namespace","useColors","color","prefix","split","join","formatBrowserArgs","index","lastC","replace","match","splice","browserColors","createLogger","undefined","_len","_key","unshift","namespaces","map","RegExp","slice","some","regex","test","colors","hash","charCodeAt","Math","abs","selectColor","type","__nwjs","localStorage","getItem","error","DEBUG","formatArgs","loadBrowser","FormRegisterContext","React","createContext","register","deregister","setValue","setTouched","setError","update","getField","FormStateContext","FormApiContext","getFullField","getValues","GroupContext","debug","Debug","pathToArrayElem","path","pathArray","ldtoPath","Number","isInteger","cleanup","obj","pull","ldget","isArray","ldpull","every","JSON","stringify","ldunset","ObjectMap","ldvalues","ldhas","ldset","delete","FormController","_this","options","FormController_classCallCheck","_getPrototypeOf","fields","Map","registered","state","values","touched","errors","pristine","dirty","invalid","submits","_assertThisInitialized","setFormError","submitForm","reset","validate","keyDown","updater","EventEmitter","_objectSpread","_this2","field","fieldApi","allowEmptyString","allowEmptyStrings","setValues","getValue","getTouched","getError","getState","getFormState","fieldExists","getInitialValue","validateField","resetField","notify","set","_this3","notifier","forEach","fieldName","toNotify","empty","initialValues","_this4","initialValue","getFormApi","_this5","_this6","res","validateFields","has","keyCode","preventEnter","preventDefault","dontPreventDefault","valid","fieldState","fieldStuff","keepState","useForm","_ref","getApi","onChange","onSubmit","onValueChange","onSubmitFailure","formController","_slicedToArray","useState","_useState4","formState","setFormState","useLayoutEffect","onChangeHandler","onSubmitHandler","onValueHandler","onFailureHandler","formApi","Form","children","render","component","rest","_objectWithoutProperties","props","_useForm","external_react_default","a","createElement","Provider","_extends","onReset","onKeyDown","useFormApi","useContext","useFormState","buildScopedFormApi","scope","Scope_objectSpread","Scope","formRegister","scopedFormApi","useMemo","scopedRegister","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","buildScopedRegister","uuidv4","random","toString","ArrayField","initialVals","_useState2","ArrayField_slicedToArray","setInitialValues","initialKeys","keys","setKeys","remove","newKeys","newInitialValues","add","_toConsumableArray","addWithInitialValue","FormProvider","FormProvider_objectWithoutProperties","FormProvider_extends","withFormApi","Component","forwardRef","ref","Consumer","withFormApi_extends","withFormState","withFormState_extends","buildFieldApi","exists","useFieldApi","buildFieldState","useFieldState","withFieldState","withFieldState_extends","withFieldApi","withFieldApi_extends","withRadioGroup","radioGroupApi","radioGroupState","withRadioGroup_extends","logger","useStateWithGetter","initial","useRef","useField_slicedToArray","setState","current","initializeValue","mask","initializeMask","format","parse","useField","fieldProps","userRef","maskWithCursorOffset","validateOnChange","validateOnBlur","validateOnMount","maskOnBlur","maintainCursor","userProps","useField_objectWithoutProperties","_useStateWithGetter2","setVal","getVal","_useStateWithGetter4","setErr","getErr","_useStateWithGetter6","setTouch","getTouch","_useStateWithGetter8","setCursor","getCursor","_useStateWithGetter10","setCursorOffset","getCursorOffset","maskedValue","setMaskedValue","val","maskedVal","offset","target","selectionStart","initVal","fullField","internalRef","useEffect","selectionEnd","style","border","borderWidth","borderStyle","borderColor","borderImage","shouldUpdate","useField_toConsumableArray","asField","_useField","asField_extends","forwardedRef","Text","Text_objectWithoutProperties","onBlur","background","Text_extends","Radio","Radio_objectWithoutProperties","groupValue","groupOnChange","groupOnBlur","Radio_extends","checked","TextArea","TextArea_objectWithoutProperties","TextArea_extends","Select","Select_classCallCheck","Select_getPrototypeOf","handleChange","Select_assertThisInitialized","selectRef","createRef","selected","Select_toConsumableArray","filter","option","multiple","_this$props","Select_objectWithoutProperties","Select_extends","Option","Option_objectWithoutProperties","Option_extends","Checkbox","Checkbox_objectWithoutProperties","Checkbox_extends","RadioGroup","groupContext","RadioGroup_objectSpread","__webpack_exports__","components_Form","components_FormProvider","HOC_withFormApi","HOC_withFormState","HOC_withFieldApi","HOC_withFieldState","HOC_withRadioGroup","HOC_asField","hooks_useForm","hooks_useField","hooks_useFieldApi","hooks_useFieldState","hooks_useFormApi","hooks_useFormState","form_fields_Text","form_fields_Radio","form_fields_TextArea","form_fields_Select","form_fields_Option","form_fields_Checkbox","form_fields_RadioGroup","Text_Text","Radio_Radio","RadioGroup_RadioGroup","TextArea_TextArea","Select_Select","Checkbox_Checkbox","components_Scope","components_ArrayField","require"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"informed\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"informed\"] = factory();\n\telse\n\t\troot[\"informed\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * \n * I stole most of this code from the debug lib\n * https://github.com/visionmedia/debug\n * \n * Just wanted it to be easy to debug without relying on the dependency!\n */\n\n\n/**\n\t* Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @param {String} colors color pallette to choose from\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\nfunction selectColor(namespace, colors) {\n  let hash = 0;\n\n  for (let i = 0; i < namespace.length; i++) {\n    hash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return colors[Math.abs(hash) % colors.length];\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatNodeArgs(args, config) {\n\n  const name = config.namespace;\n\n  if (config.useColors) {\n    const c = config.color;\n    const colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n    const prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n  } else {\n    args[0] = name + ' ' + args[0];\n  }\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n */\n\nfunction formatBrowserArgs(args, config) {\n\n  args[0] = (config.useColors ? '%c' : '') + config.namespace;\n\n  if (!config.useColors) {\n    return;\n  }\n\n  const c = 'color: ' + config.color;\n\n  // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  let index = 0;\n  let lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, match => {\n    if (match === '%%') {\n      return;\n    }\n    index++;\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n\nconst browserColors = [\n  '#0000CC',\n  '#0000FF',\n  '#0033CC',\n  '#0033FF',\n  '#0066CC',\n  '#0066FF',\n  '#0099CC',\n  '#0099FF',\n  '#00CC00',\n  '#00CC33',\n  '#00CC66',\n  '#00CC99',\n  '#00CCCC',\n  '#00CCFF',\n  '#3300CC',\n  '#3300FF',\n  '#3333CC',\n  '#3333FF',\n  '#3366CC',\n  '#3366FF',\n  '#3399CC',\n  '#3399FF',\n  '#33CC00',\n  '#33CC33',\n  '#33CC66',\n  '#33CC99',\n  '#33CCCC',\n  '#33CCFF',\n  '#6600CC',\n  '#6600FF',\n  '#6633CC',\n  '#6633FF',\n  '#66CC00',\n  '#66CC33',\n  '#9900CC',\n  '#9900FF',\n  '#9933CC',\n  '#9933FF',\n  '#99CC00',\n  '#99CC33',\n  '#CC0000',\n  '#CC0033',\n  '#CC0066',\n  '#CC0099',\n  '#CC00CC',\n  '#CC00FF',\n  '#CC3300',\n  '#CC3333',\n  '#CC3366',\n  '#CC3399',\n  '#CC33CC',\n  '#CC33FF',\n  '#CC6600',\n  '#CC6633',\n  '#CC9900',\n  '#CC9933',\n  '#CCCC00',\n  '#CCCC33',\n  '#FF0000',\n  '#FF0033',\n  '#FF0066',\n  '#FF0099',\n  '#FF00CC',\n  '#FF00FF',\n  '#FF3300',\n  '#FF3333',\n  '#FF3366',\n  '#FF3399',\n  '#FF33CC',\n  '#FF33FF',\n  '#FF6600',\n  '#FF6633',\n  '#FF9900',\n  '#FF9933',\n  '#FFCC00',\n  '#FFCC33'\n];\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the debug modes\n * @api private\n */\nfunction loadBrowser() {\n  let namespaces;\n  try {\n    namespaces = localStorage.getItem('debug');\n  } catch (error) {\n    // Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!namespaces && typeof process !== 'undefined' && 'env' in process) {\n    namespaces = process.env.DEBUG;\n  }\n\n  return { \n    namespaces: namespaces || '', \n    colors: browserColors,\n    useColors: true,\n    formatArgs: formatBrowserArgs\n  };\n} \n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the debug modes\n * @api private\n */\nfunction loadNode() {\n  return { \n    namespaces: process.env.DEBUG || '',\n    colors: [6, 2, 3, 4, 5, 1], \n    useColors: true, \n    formatArgs: formatNodeArgs\n  };\n}\n\n\nfunction createLogger(prefix = null, config) {\n  return function(...args) {\n\n    if (prefix){\n      args.unshift(prefix);\n    }\n\n    // Create a namespace regex for each namespace\n    const matches = config.namespaces.split(',').map(( namespace )=>{\n      // Remove wildcard and add to regex if wildcard\n      if( namespace[namespace.length - 1] === '*' ){\n        return new RegExp('^' + namespace.slice(0, namespace.length-1) + '.*' + '$');\n      }\n      return new RegExp('^' + namespace + '$');\n    });\n    \n    // Does the prefix match a namespace\n    const match = matches.some((regex)=>{\n      return regex.test(prefix);\n    });\n\n    const conf = {\n      color: selectColor( prefix, config.colors ),\n      namespace: prefix, \n      useColors: config.useColors\n    };\n\n    if (process.env.NODE_ENV !== 'production' && match ) {\n      config.formatArgs(args, conf);\n      console.log(...args);\n    }\n  };\n}\n\nfunction nodeLogger(prefix) {\n  return createLogger(prefix, loadNode());\n}\n\nfunction browserLogger(prefix) {\n  return createLogger(prefix, loadBrowser());\n}\n\n/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n  module.exports = browserLogger;\n} else {\n  module.exports = nodeLogger;\n}","import React from 'react';\n\nconst FormRegisterContext = React.createContext({\n  register: () => {},\n  deregister: () => {},\n  setValue: () => {},\n  setTouched: () => {}, \n  setError: () => {},\n  update: () => {}, \n  getField: () => {}\n});\n\nconst FormStateContext = React.createContext({});\nconst FormApiContext = React.createContext({\n  getFullField: () => {},\n  getValues: () => {},\n});\nconst GroupContext = React.createContext();\nconst SelectContext = React.createContext();\n\nexport { FormRegisterContext, FormStateContext, FormApiContext, GroupContext, SelectContext };\n","import ldset from 'lodash/setWith';\nimport ldunset from 'lodash/unset';\nimport ldtoPath from 'lodash/toPath';\nimport ldget from 'lodash/get';\nimport ldhas from 'lodash/has';\nimport ldvalues from 'lodash/values';\nimport ldpullAt from 'lodash/pullAt';\nimport ldpull from 'lodash/pull';\nimport Debug from './debug';\nconst debug = Debug('informed:ObjMap' + '\\t');\n\nconst pathToArrayElem = (path) => {\n  const pathArray = ldtoPath(path);\n  return Number.isInteger(+pathArray[pathArray.length-1]);\n};\n\nclass ObjectMap {\n  static empty(object) {\n    return ldvalues(object).length === 0;\n  }\n\n  static get(object, path) {\n    return ldget(object, path);\n  }\n\n  static has(object, path) {\n    return ldhas(object, path);\n  }\n\n  static set(object, path, value) {\n    if( value !== undefined ){\n      ldset(object, path, value);\n    } else {\n      // Setting things to undefined in informed is special!\n      // so in this else statement we deal with that\n\n      // If the path is to an array leaf then we want to set to undefined\n      // Example: \n      // path = 'foo.bar[2]'\n      // foo.bar = [ 'baz', 'raz', 'taz' ]\n      // setting taz to undefined   ^^^\n      if( pathToArrayElem(path) && ObjectMap.get(object, path) !== undefined ) {\n        ldset(object, path, undefined);\n        let pathArray = ldtoPath(path);\n        pathArray = pathArray.slice(0, pathArray.length - 1);\n        cleanup(object, pathArray, false);\n      }\n      // Only delete the field if it needs to be deleted and its not a path to an array ( array leaf )\n      // Example: \n      // path = 'foo.bar'\n      // foo.bar = 'baz'\n      // removing foo.bar from the object completley\n      else if( !pathToArrayElem(path) && ObjectMap.get(object, path) !== undefined ) ObjectMap.delete(object, path);\n    }\n  }\n\n  static delete(object, path) {\n    debug('DELETE', path);\n    ldunset(object, path);\n    let pathArray = ldtoPath(path);\n    pathArray = pathArray.slice(0, pathArray.length - 1);\n    cleanup(object, pathArray);\n  }\n\n  // May need to do this some day ;)\n  // static pullOut(object, path, index) {\n  //   // Get the path to the array\n  //   let pathArray = ldtoPath(path);\n  //   pathArray = pathArray.slice(0, pathArray.length - 1).join();\n  //   debug('PathArray', pathArray);\n  //   // Get the array\n  //   const arr = ldget(object, pathArray);\n  //   debug('Array', arr);\n  //   // Pull out of array\n  //   ldpullAt(arr, index);\n  // }\n}\n\nfunction cleanup(obj, path, pull = true) {\n  // Base case no path left\n  if (path.length === 0) {\n    return;\n  }\n\n  const object = ldget(obj, path);\n\n  // Clean up undefined from array\n  if (Array.isArray(object) && pull) {\n    ldpull(object, undefined);\n  }\n\n  // Delete object if its empty\n  if (\n    Array.isArray(object)\n      ? object.every(e => e == null)\n      : JSON.stringify(object) === '{}'\n  ) {\n    ldunset(obj, path);\n  }\n  // Recur\n  cleanup(obj, path.slice(0, path.length - 1));\n}\n\nexport default ObjectMap;\n","import ObjectMap from './ObjectMap';\nimport { EventEmitter } from 'events';\nimport Debug from './debug';\nconst debug = Debug('informed:Controller'+'\\t');\n\nclass FormController extends EventEmitter {\n\n  constructor(options = {}) {\n\n    // Dont forget to call super! :)\n    super();\n\n    this.options = options;\n\n    // Map will store all fields\n    // Key => fieldName - example: \"foo.bar[3].baz\"\n    // Val => { field, fieldApi }\n    // Why? so the form can control the fields!\n    this.fields = new Map();\n\n    // Map to store if the field was once registered\n    this.registered = {};\n\n    // Initialize the controller state\n    this.state = {\n      values: {},\n      touched: {},\n      errors: {},\n      pristine: true,\n      dirty: false,\n      invalid: false,\n      submits: 0\n    };\n\n    // Bind functions that will be called externally\n    //this.update = this.update.bind(this);\n    this.deregister = this.deregister.bind(this);\n    this.register = this.register.bind(this);\n    this.setValue = this.setValue.bind(this);\n    this.setTouched = this.setTouched.bind(this);\n    this.setError = this.setError.bind(this);\n    this.setFormError = this.setFormError.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.reset = this.reset.bind(this);\n    this.update = this.update.bind(this);\n    this.validate = this.validate.bind(this);\n    this.keyDown = this.keyDown.bind(this);\n    this.getField = this.getField.bind(this);\n\n    // Updater will be used by fields to update and register\n    this.updater = {\n      register: this.register,\n      deregister: this.deregister,\n      setValue: this.setValue, \n      setTouched: this.setTouched, \n      setError: this.setError,\n      update: this.update,\n      getField: this.getField\n    };\n  }\n\n  // Generate the external form state that will be exposed to the users\n  getFormState() {\n    return {\n      ...this.state, \n      pristine: this.pristine(),\n      dirty: this.dirty(),\n      invalid: this.invalid()\n    };\n  }\n\n  // Generate the external form api that will be exposed to the users\n  getFormApi() {\n    const setValue = (field, value) =>\n      this.fields.get(field).fieldApi.setValue(value, null, {\n        allowEmptyString: this.options.allowEmptyStrings\n      });\n\n    const setTouched = (field, value) =>\n      this.fields.get(field).fieldApi.setTouched(value);\n\n    const setError = (field, value) =>\n      this.fields.get(field).fieldApi.setError(value);\n\n    const setFormError = ( error ) => this.setFormError(error);\n\n    const setValues = values => this.setValues(values);\n\n    const getValue = (field) => this.getValue(field);\n\n    const getTouched = (field) => this.getTouched(field);\n    \n    const getError = (field) => this.getError(field);\n\n    const reset = () => this.reset();\n\n    const submitForm = e => this.submitForm(e);\n\n    const getState = () => this.getFormState();\n\n    const getValues = () => this.getFormState().values;\n\n    const getFullField = field => this.getFullField(field);\n\n    const fieldExists = field => this.fields.get(field) != null;\n\n    const getInitialValue = field => this.getInitialValue(field);\n\n    const validate = () => this.validate();\n\n    const validateField = field => this.fields.get(field).fieldApi.validate();\n\n    const resetField = field => this.fields.get(field).fieldApi.reset();\n\n    return {\n      setValue,\n      setTouched,\n      setError,\n      setValues,\n      getValue,\n      getTouched,\n      getError,\n      reset,\n      submitForm,\n      getState,\n      getValues,\n      getFullField,\n      fieldExists,\n      getInitialValue,\n      setFormError,\n      validate,\n      validateField,\n      resetField\n    };\n  }\n\n  /* ------------------- Internal Methods ------------------- */\n\n  setValue(field, value, notify = true) {\n    debug(`Setting ${field} to ${value}`);\n    // Set the new value\n    ObjectMap.set(this.state.values, field, value);\n    // The forms values have changed so we want to clear form level error\n    delete this.state.error;\n    // Emit change events\n    this.emit('change');\n    this.emit('value');\n    // Notify other fields \n    if( notify ) this.notify(field);\n  }\n\n  setTouched(field, value) {\n    ObjectMap.set(this.state.touched, field, value);\n    this.emit('change');\n  }\n\n  setError(field, value) {\n    ObjectMap.set(this.state.errors, field, value);\n    this.emit('change');\n  }\n\n  setFormError(value){\n    this.state.error = value;\n    this.emit('change');\n  }\n\n  // Notify other fields \n  notify( field ) {\n    // Get the notifier\n    const notifier =  this.fields.get(field);\n    // If we have a list we must notify each one\n    if( notifier.notify ){\n      notifier.notify.forEach( fieldName =>{\n        // Get the field toNotify\n        const toNotify =  this.fields.get(fieldName);\n        if( toNotify ){\n          debug('Notifying', toNotify.field);\n          const value = this.getValue(toNotify.field);\n          toNotify.fieldApi.validate(value);\n        }\n      });\n    }\n  }\n\n  getValue(field) {\n    return ObjectMap.get(this.state.values, field);\n  }\n\n  getTouched(field) {\n    return ObjectMap.get(this.state.touched, field);\n  }\n\n  getError(field) {\n    return ObjectMap.get(this.state.errors, field);\n  }\n\n  getFullField(field) { \n    return field;\n  }\n\n  valid(){\n    return !!(ObjectMap.empty(this.state.errors) && !this.state.error);\n  }\n\n  invalid() {\n    return !!(!ObjectMap.empty(this.state.errors) || this.state.error);\n  }\n\n  pristine() {\n    return ObjectMap.empty(this.state.touched) && ObjectMap.empty(this.state.values);\n  }\n\n  dirty() {\n    return !this.pristine();\n  }\n\n  getInitialValue( field ){\n    return ObjectMap.get(this.options.initialValues, field);\n  }\n\n  reset() {\n    debug('Resetting');\n    // So we because all fields controll themselves and, \"inform\", this controller\n    // of their changes, we need to literally itterate through all registered fields\n    // and reset them. Not a big deal but very important to remember that you cant simply\n    // reset this controllers state!\n    this.fields.forEach(( field )=>{\n      field.fieldApi.reset();\n      // Initialize the values if it needs to be\n      const initialValue = ObjectMap.get(this.options.initialValues, field.field);\n      if( initialValue !== undefined ){\n        this.getFormApi().setValue( field.field, initialValue );\n      } \n    });\n\n    this.emit('change');\n  }\n\n  setValues(values){\n    debug('Setting values');\n    // So we because all fields controll themselves and, \"inform\", this controller\n    // of their changes, we need to literally itterate through all registered fields\n    // and set them. Not a big deal but very important to remember that you cant simply\n    // set this controllers state!\n    this.fields.forEach(( field )=>{\n      // Initialize the values if it needs to be\n      const value = ObjectMap.get(values, field.field);\n      if( value !== undefined ){\n        this.getFormApi().setValue( field.field, value );\n      } \n    });\n\n    this.emit('change');\n  }\n\n  validate() {\n    // Itterate through and call validate on every field\n    this.fields.forEach(( field, key )=>{\n      const value = this.getValue(key);\n      field.fieldApi.validate(value);\n      field.fieldApi.setTouched(true);\n    });\n    \n    // Call the form level validation if its present\n    if( this.options.validate ){\n      const res = this.options.validate( this.state.values );\n      this.setFormError(res);\n    }\n    \n    // Call the forms field level validation\n    if( this.options.validateFields ){\n      const errors = this.options.validateFields( this.state.values );\n      // So we because all fields controll themselves and, \"inform\", this controller\n      // of their changes, we need to literally itterate through all registered fields\n      // and set them. Not a big deal but very important to remember that you cant simply\n      // set this controllers state!\n      this.fields.forEach(( field )=>{\n        // Check to see if there is an error to set \n        // Note: we use has becuause value may be there but undefined\n        if( ObjectMap.has(errors, field.field ) ){\n          const error = ObjectMap.get(errors, field.field);\n          // If there is an error then set it\n          this.getFormApi().setError( field.field, error );\n        } \n      });\n    \n    }\n  }\n\n  keyDown(e) {\n    // If preventEnter then return\n    if( e.keyCode == 13 && this.options.preventEnter ){\n      e.preventDefault(e);\n      return false;\n    }\n  }\n\n  submitForm(e) {\n\n    // Incriment number of submit attempts\n    this.state.submits = this.state.submits + 1;\n\n    if( !this.options.dontPreventDefault && e ){\n      // Prevent default browser form submission\n      e.preventDefault(e);\n    }\n\n    // Validate the form\n    this.validate();\n\n    // Emit a change \n    this.emit('change');\n\n    // Check validity and perform submission if valid\n    if( this.valid() ){\n      debug('Submit', this.state);\n      this.emit('submit');\n    } else {\n      debug('Submit', this.state);\n      this.emit('failure');\n    }\n  }\n\n  /* ---------------- Updater Functions (used by fields) ---------------- */\n\n  register(field, fieldState, fieldStuff) {\n    debug('Register', field, fieldState);\n    // Determine if the field has been registered before\n    const registered = this.registered[field];\n    // Set registered flag\n    this.registered[field] = true;\n    // Always register the field\n    this.fields.set(field, fieldStuff);\n    // Initialize state\n    // When a user had keep state load existing values\n    if( fieldStuff.keepState ){\n      const value = ObjectMap.get(this.state.values, field);\n      const initialValue = ObjectMap.get(this.options.initialValues, field);\n      // If we have a defined value then set that\n      if( value !== undefined ) {\n        this.getFormApi().setValue( field, value || fieldState.value );\n      }\n      // Otherwise we want to use the initial value \n      else if( initialValue !== undefined ){\n        this.getFormApi().setValue( field, initialValue );\n      } else { \n        // Otherwise set the value to whatever the field is set to ( might have been field level initial value )\n        this.setValue(field, fieldState.value, false);\n      }\n      // Finnally we set touched\n      const touched = ObjectMap.get(this.state.touched, field);\n      this.getFormApi().setTouched( field, touched );\n      // Error will get set by validator implicitly so we dont need to remember that\n    } else {\n      // Initialize the values if it needs to be\n      const initialValue = ObjectMap.get(this.options.initialValues, field);\n      if( initialValue !== undefined && !registered ){\n        this.getFormApi().setValue( field, initialValue );\n      } else { \n        // Otherwise set the value to whatever the field is set to ( might have been field level initial value )\n        this.setValue(field, fieldState.value, false);\n      }\n      this.setTouched(field, fieldState.touched);\n    }\n    this.setError(field, fieldState.error);\n\n  }\n\n  deregister(field) {\n    debug('Deregister', field);\n    const field2remove = this.fields.get(field);\n    if(!field2remove.keepState){\n      // Remove the data!\n      ObjectMap.delete(this.state.values, field);\n      ObjectMap.delete(this.state.touched, field);\n      ObjectMap.delete(this.state.errors, field);\n    }\n    // Always need to delete the field\n    this.fields.delete(field);\n    this.emit('change');\n  }\n\n  update(field, fieldStuff) {\n    debug('Update', field);\n    this.fields.set(field, fieldStuff);\n  }\n\n  getField(field){\n    debug('Getting Field', field);\n    return this.fields.get(field);\n  }\n}\n\nexport default FormController;\n","import React, { useState, useLayoutEffect } from 'react';\nimport Debug from '../debug';\nimport FormController from '../FormController';\n\nconst debug = Debug('informed:useForm' + '\\t\\t');\n\nconst useForm = ({\n  dontPreventDefault,\n  initialValues,\n  validate,\n  validateFields,\n  allowEmptyStrings,\n  preventEnter,\n  getApi,\n  onChange,\n  onSubmit,\n  onValueChange,\n  onSubmitFailure\n}) => {\n\n  debug('Render useForm');\n\n  // Create form controller\n  const [formController] = useState(new FormController({\n    dontPreventDefault,\n    initialValues,\n    validate,\n    validateFields,\n    allowEmptyStrings,\n    preventEnter,\n  }));\n\n  // Form state will be used to trigger rerenders\n  const [ formState, setFormState ] = useState( formController.getFormState() );\n\n  // Register for events\n  useLayoutEffect(()=>{\n\n    const onChangeHandler = () => onChange && onChange( formController.getFormState() );\n    const onSubmitHandler = () => onSubmit && onSubmit( formController.getFormState().values );\n    const onValueHandler = () => onValueChange && onValueChange( formController.getFormState().values );\n    const onFailureHandler = () => onSubmitFailure && onSubmitFailure( formController.getFormState().errors );\n\n    // Register for events\n    formController.on('change', onChangeHandler);\n    formController.on('submit', onSubmitHandler);\n    formController.on('value', onValueHandler);\n    formController.on('failure', onFailureHandler);\n\n    // Unregister events\n    return () => {\n      formController.removeListener('change', onChangeHandler);\n      formController.removeListener('submit', onSubmitHandler);\n      formController.removeListener('value', onValueHandler);\n      formController.removeListener('failure', onFailureHandler);\n    };\n  }, [onChange, onSubmit, onValueChange, onSubmitFailure ]);\n\n  // Initialize code like constructor but not muhahah\n  useState(()=>{\n    // Update the form state to trigger rerender!\n    const onChangeHandlerRerender = () => setFormState( formController.getFormState() );\n    formController.on('change', onChangeHandlerRerender);\n    // Give access to api outside\n    if (getApi) {\n      getApi(formController.getFormApi());\n    }\n  });\n\n  // We dont want this to happen on every render so thats why useState is used here\n  const [ formApi ] = useState( formController.getFormApi() );\n\n  return { formApi, formState, formController };\n};\n\nexport default useForm;\n","import React from 'react';\nimport { FormStateContext, FormApiContext, FormRegisterContext } from '../Context';\nimport Debug from '../debug';\nimport useForm from '../hooks/useForm';\n\nconst debug = Debug('informed:Form' + '\\t\\t');\n\nconst Form = ({ \n  children, \n  getApi, \n  onChange, \n  onSubmit, \n  onValueChange, \n  initialValues,\n  onSubmitFailure,\n  render,\n  validate,\n  validateFields,\n  component,\n  preventEnter,\n  dontPreventDefault,\n  allowEmptyStrings,\n  ...rest }) => {\n\n  debug('Render FORM');\n\n  const { \n    formApi, \n    formController,\n    formState \n  } = useForm({\n    dontPreventDefault,\n    initialValues,\n    validate,\n    validateFields,\n    allowEmptyStrings,\n    preventEnter,\n    getApi,\n    onChange,\n    onSubmit,\n    onValueChange, \n    onSubmitFailure\n  });\n    \n  const getContent = () => {\n\n    const props = {\n      formState,\n      formApi\n    };\n\n    if (component) {\n      return React.createElement(component, props, children);\n    }\n    if (render) {\n      return render(props);\n    }\n    if (typeof children === 'function') {\n      return children(props);\n    }\n    return children;\n  };\n\n  /* --- Create Provider and render Content --- */\n  return (\n    <FormRegisterContext.Provider value={formController.updater}>\n      <FormApiContext.Provider value={formApi}>\n        <FormStateContext.Provider value={formState}>\n          <form\n            {...rest}\n            onReset={formController.reset}\n            onSubmit={formController.submitForm}\n            onKeyDown={formController.keyDown}>\n            {getContent()}\n          </form>\n        </FormStateContext.Provider>\n      </FormApiContext.Provider>\n    </FormRegisterContext.Provider>\n  );\n  \n};\n\nexport default Form;\n","import React, { useContext } from 'react';\nimport { FormApiContext } from '../Context';\n\nfunction useFormApi() {\n  const formApi = useContext(FormApiContext);\n  return formApi;\n}\n\nexport default useFormApi;\n","import React, { useContext } from 'react';\nimport { FormStateContext } from '../Context';\n\nfunction useFormState() {\n  const formState = useContext(FormStateContext);\n  return formState;\n}\n\nexport default useFormState;\n","import React, { useContext, useMemo } from 'react';\nimport { FormRegisterContext, FormStateContext, FormApiContext } from '../Context';\nimport useFormApi from '../hooks/useFormApi';\nimport useFormState from '../hooks/useFormState';\n\nconst buildScopedFormApi = ( scope, formApi ) => {\n  return {\n    ...formApi,\n    getValue: field => formApi.getValue(`${scope}.${field}`),\n    getTouched: field => formApi.getTouched(`${scope}.${field}`),\n    getError: field => formApi.getError(`${scope}.${field}`),\n    setValue: (field, value) => formApi.setValue(`${scope}.${field}`, value),\n    setTouched: (field, value) => formApi.setTouched(`${scope}.${field}`, value),\n    setError: (field, value) => formApi.setError(`${scope}.${field}`, value),\n    getFullField: field => `${formApi.getFullField(scope)}.${field}`\n  }; \n};\n\nconst buildScopedRegister = ( scope, formRegister ) => {\n\n  const { register, deregister, setValue, setTouched, setError, update, getField } = formRegister;\n\n  return {\n    register: ( field, ...args ) => register(`${scope}.${field}`, ...args),\n    deregister: ( field, ...args ) => deregister(`${scope}.${field}`, ...args),\n    update: ( field, ...args ) => update(`${scope}.${field}`, ...args),\n    setValue: ( field, ...args ) => setValue(`${scope}.${field}`, ...args),\n    setTouched: ( field, ...args ) => setTouched(`${scope}.${field}`, ...args),\n    setError: ( field, ...args ) => setError(`${scope}.${field}`, ...args),\n    getField: ( field, ...args ) => getField(`${scope}.${field}`, ...args),\n  }; \n};\n\nconst Scope = ({scope, children}) => {\n\n  const formRegister = useContext(FormRegisterContext);\n  const formApi = useFormApi();\n  const formState = useFormState();\n\n  // VERY important to memoize the builders!\n  const scopedFormApi = useMemo(() => buildScopedFormApi(scope, formApi), [scope]);\n  const scopedRegister = useMemo(() => buildScopedRegister(scope, formRegister), [scope]);\n\n  return (\n    <FormRegisterContext.Provider value={scopedRegister}>\n      <FormApiContext.Provider value={scopedFormApi}>\n        <FormStateContext.Provider value={formState}>\n          {children}\n        </FormStateContext.Provider>\n      </FormApiContext.Provider>\n    </FormRegisterContext.Provider>\n  );\n\n};\n\nexport default Scope;\n","import React, { useState } from 'react';\nimport useFormApi from '../hooks/useFormApi';\n\n// https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\nconst uuidv4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nconst ArrayField = ({ field, children, initialValue }) => {\n\n  const formApi = useFormApi();\n\n  const initialVals = formApi.getInitialValue(field) || initialValue || [];\n\n  // TODO throw error if initial value and its not array\n\n  const [initialValues, setInitialValues] = useState(initialVals);\n\n  const initialKeys = initialValues ? initialValues.map(() => uuidv4()) : [];\n\n  const [keys, setKeys] = useState(initialKeys);\n\n  const remove = i => {\n    const newKeys = keys.slice(0, i).concat(keys.slice(i + 1, keys.length));\n    setKeys(newKeys);\n    const newInitialValues = initialValues.slice(0, i).concat(initialValues.slice(i + 1, initialValues.length));\n    setInitialValues(newInitialValues);\n  };\n\n  const add = () => {\n    keys.push(uuidv4());\n    setKeys([...keys]);\n  };\n\n  const addWithInitialValue = ( initialValue ) => {\n    keys.push(uuidv4());\n    setKeys([...keys]);\n    setInitialValues(initialValues.concat([initialValue]));\n  };\n\n  const fields = keys.map((key, i) => ({\n    key,\n    field: `${field}[${i}]`,\n    remove: () => remove(i),\n    initialValue: initialValues && initialValues[i]\n  }));\n\n  return children({ fields, add, addWithInitialValue });\n};\n\nexport default ArrayField;\n","import React from 'react';\nimport { FormStateContext, FormApiContext, FormRegisterContext } from '../Context';\nimport Debug from '../debug';\nimport useForm from '../hooks/useForm';\n\nconst debug = Debug('informed:FormProvider' + '\\t\\t');\n\nconst FormProvider = ({ \n  children, \n  getApi, \n  onChange, \n  onSubmit, \n  onValueChange, \n  initialValues,\n  onSubmitFailure,\n  validate,\n  validateFields,\n  preventEnter,\n  dontPreventDefault,\n  allowEmptyStrings,\n  ...rest }) => {\n\n  debug('Render FormProvider');\n\n  const { \n    formApi, \n    formController,\n    formState \n  } = useForm({\n    dontPreventDefault,\n    initialValues,\n    validate,\n    validateFields,\n    allowEmptyStrings,\n    preventEnter,\n    getApi,\n    onChange,\n    onSubmit,\n    onValueChange, \n    onSubmitFailure\n  });\n\n  /* --- Create Provider and render Content --- */\n  return (\n    <FormRegisterContext.Provider value={formController.updater}>\n      <FormApiContext.Provider value={formApi}>\n        <FormStateContext.Provider value={formState}>\n          <form\n            {...rest}\n            onReset={formController.reset}\n            onSubmit={formController.submitForm}\n            onKeyDown={formController.keyDown}>\n            {children}\n          </form>\n        </FormStateContext.Provider>\n      </FormApiContext.Provider>\n    </FormRegisterContext.Provider>\n  );\n  \n};\n\nexport default FormProvider;\n","import React from 'react';\nimport { FormApiContext } from '../Context';\n\nconst withFormApi = Component =>\n  React.forwardRef((props, ref) => (\n    <FormApiContext.Consumer>\n      {(formApi) => <Component formApi={formApi} ref={ref} {...props} />}\n    </FormApiContext.Consumer>\n  ));\n\nexport default withFormApi;\n","import React from 'react';\nimport { FormStateContext } from '../Context';\n\nconst withFormState = Component =>\n  React.forwardRef((props, ref) => (\n    <FormStateContext.Consumer>\n      {(formState) => (\n        <Component formState={formState} ref={ref} {...props} />\n      )}\n    </FormStateContext.Consumer>\n  ));\n\nexport default withFormState;\n","import React, { useMemo, useContext } from 'react';\nimport useFormApi from './useFormApi';\nimport { FormRegisterContext } from '../Context';\n\nconst buildFieldApi = (formApi, field) => {\n\n  return { \n    // TODO refactor to use field api from updater.. need to make sure this \n    // will be stable\n    getValue: () => formApi.getValue(field),\n    setValue: value => formApi.setValue(field, value),\n    getTouched: () => formApi.getTouched(field),\n    setTouched: value => formApi.setTouched(field, value),\n    getError: () => formApi.getError(field),\n    setError: value => formApi.setError(field, value),\n    reset: () => formApi.resetField(field),\n    validate: () => formApi.validateField(field), \n    exists: () => formApi.fieldExists(field)\n  };\n};\n\nfunction useFieldApi( field ) {\n  const formApi = useFormApi();\n\n  const fieldApi = useMemo( () => buildFieldApi( formApi, field ), [field] );\n  return fieldApi;\n}\n\nexport default useFieldApi;\n","import React from 'react';\nimport useFieldApi from './useFieldApi';\nimport useFormState from './useFormState';\n\nconst buildFieldState = (fieldApi) => {\n  return {\n    value: fieldApi.getValue(),\n    touched: fieldApi.getTouched(),\n    error: fieldApi.getError(),\n  };\n};\n\nfunction useFieldState( field ) {\n  const fieldApi = useFieldApi(field);\n  // TODO find better way to get this to rerender\n  const formState = useFormState();\n  // The above is a temp hack\n  const fieldState = buildFieldState(fieldApi);\n  return fieldState;\n}\n\nexport default useFieldState;\n","import React from 'react';\nimport useFieldState from '../hooks/useFieldState';\n\nconst withFieldState = field => Component => props => {\n  const fieldState = useFieldState(field);\n  return <Component fieldState={fieldState} {...props} />;\n};\n\nexport default withFieldState;","import React from 'react';\nimport useFieldApi from '../hooks/useFieldApi';\n\nconst withFieldApi = field => Component => (props) => {\n  const fieldApi = useFieldApi( field );\n  return <Component fieldApi={fieldApi} {...props} />;\n};\n\nexport default withFieldApi;\n","import React from 'react';\nimport { GroupContext } from '../Context';\n\nconst withRadioGroup = Component =>\n  React.forwardRef((props, ref) => (\n    <GroupContext.Consumer>\n      {({ radioGroupApi, radioGroupState }) => (\n        <Component\n          radioGroupApi={radioGroupApi}\n          radioGroupState={radioGroupState}\n          ref={ref}\n          {...props}\n        />\n      )}\n    </GroupContext.Consumer>\n  ));\n\nexport default withRadioGroup;\n","import React, { useState, useLayoutEffect, useEffect, useContext, useMemo, useRef } from 'react';\nimport { FormRegisterContext } from '../Context';\nimport useFormApi from './useFormApi';\nimport Debug from '../debug';\nconst logger = Debug('informed:useField'+ '\\t');\n\n// TODO figure out if this is bad? \n// https://github.com/facebook/react/issues/14543\nfunction useStateWithGetter(initial) {\n  const ref = useRef();\n  const [state, setState] = useState(initial);\n  ref.current = state;\n  const set = (value) => {\n    ref.current = value;\n    setState(value);\n  };\n  const get = () => {\n    return ref.current;\n  };\n  return [state, set, get];\n}\n\nconst initializeValue = (value, mask) => {\n  if(value != null){\n    // Call mask if it was passed\n    if(mask){\n      return mask(value);\n    }\n    return value;\n  }\n  // Not needed but called out specifically\n  return undefined;\n}; \n\nconst initializeMask = (value, format, parse) => {\n  // Call format and parse if they were passed\n  if(format && parse){\n    return format(value);\n  }\n  return value;\n};\n\nfunction useField(fieldProps = {}, userRef) {\n  // Pull props off of field props\n  const { \n    field,\n    validate,\n    mask,\n    maskWithCursorOffset,\n    format,\n    parse,\n    initialValue,\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    maskOnBlur,\n    allowEmptyString,\n    onValueChange,\n    notify,\n    keepState, \n    maintainCursor,\n    debug, \n    type,\n    ...userProps\n  } = fieldProps;\n\n  // Grab the form register context\n  const updater = useContext(FormRegisterContext);\n\n  // Grab the form state\n  const formApi = useFormApi();\n\n  // Initialize state \n  const [value, setVal, getVal] = useStateWithGetter(initializeValue(initialValue, mask));\n  const [error, setErr, getErr] = useStateWithGetter( validateOnMount ? validate(value) : undefined );\n  const [touched, setTouch, getTouch] = useStateWithGetter();\n  const [cursor, setCursor, getCursor] = useStateWithGetter(0);\n  const [cursorOffset, setCursorOffset, getCursorOffset] = useStateWithGetter(0);\n  const [maskedValue, setMaskedValue ] = useState(initializeMask(value, format, parse));\n\n  /* ---------------------- Setters ---------------------- */\n\n  // Define set error\n  const setError = (val) => { \n    setErr(val);\n    updater.setError(field, val);\n  };\n\n  // Define set value\n  const setValue = (val, e, options = {}) => {\n    logger(`Setting ${field} to ${val}`);\n    // Initialize maked value\n    let maskedVal = val;\n    // Set value to undefined if its an empty string\n\n    if( val === '' && !allowEmptyString && !options.allowEmptyString){\n      val = undefined;\n    }\n    // Turn string into number for number fields\n    if(type === 'number' && val !== undefined ){\n      val = +val;\n    }\n    // Call mask if it was passed\n    if(mask && !maskOnBlur){\n      maskedVal = mask(val);\n      val = mask(val);\n    }\n    // Call maskWithCursorOffset if it was passed\n    if(maskWithCursorOffset && !maskOnBlur){\n      const res = maskWithCursorOffset(val);\n      maskedVal = res.value;\n      val = res.value;\n      setCursorOffset(res.offset);\n    }\n    // Call format and parse if they were passed\n    if(format && parse){\n      val = parse(val);\n      maskedVal = format(val);\n    }\n    // We only need to call validate if the user gave us one\n    // and they want us to validate on change\n    if (validate && validateOnChange) {\n      logger(`Validating after change ${field} ${val}`);\n      setError(validate(val, formApi.getValues()));\n    }\n    // Remember Cursor position!\n    if(e && e.target && e.target.selectionStart ){\n      setCursor(e.target.selectionStart);\n    }\n\n    // Now we update the value\n    setVal(val);\n    setMaskedValue(maskedVal);\n    // If the user passed in onValueChange then call it!\n    if( onValueChange ){\n      onValueChange(val);\n    }    \n    // Call the updater\n    updater.setValue(field, val);\n  };\n\n  // Define set touched\n  const setTouched = ( val, reset ) => {\n    // We only need to call validate if the user gave us one\n    // and they want us to validate on blur\n    if (validate && validateOnBlur && !reset && val ) {\n      logger(`Validating after blur ${field} ${getVal()}`);\n      setError(validate(getVal(), formApi.getValues()));\n    }\n    // Call mask if it was passed\n    if(mask && maskOnBlur){\n      const maskedVal = mask( getVal() );\n      // Now we update the value\n      setVal(maskedVal);\n      setMaskedValue(maskedVal);\n      // If the user passed in onValueChange then call it!\n      if( onValueChange ){\n        onValueChange(maskedVal);\n      }    \n      // Call the updater\n      updater.setValue(field, maskedVal);\n    }\n    // Call maskWithCursorOffset if it was passed\n    if(maskWithCursorOffset && maskOnBlur){\n      const res = maskWithCursorOffset(getVal());\n      setCursorOffset(res.offset);\n      // Now we update the value\n      setVal(res.value);\n      setMaskedValue(res.value);\n      // If the user passed in onValueChange then call it!\n      if( onValueChange ){\n        onValueChange(res.value);\n      }    \n      // Call the updater\n      updater.setValue(field, res.value);\n    }\n    setTouch(val);\n    updater.setTouched(field, val);\n  };\n\n  // Define reset\n  const reset = () => {\n    const initVal = initializeValue(initialValue, mask);\n    // TODO support numbers\n    setValue(initialValue);\n    // Setting somthing to undefined will remove it \n    setError(validateOnMount ? validate(initVal) : undefined);\n    setTouched(undefined, true);\n  };\n\n  // Define validate\n  const fieldValidate = () => {\n    if( validate ){\n      logger(`Field validating ${field} ${getVal()}`);\n      setError(validate(getVal(), formApi.getValues()));\n    }\n  };\n\n  /* ----------------- Field Api && State ----------------- */\n\n  // Build the field api\n  const fieldApi = {\n    setValue,\n    setTouched,\n    setError,\n    reset, \n    validate: fieldValidate, \n    getValue: getVal,\n    getTouched: getTouch, \n    getError: getErr\n  };\n\n  // Build the field state\n  const fieldState = {\n    value,\n    error,\n    touched,\n    maskedValue\n  };\n\n\n  // Initial register needs to happen before render ( simulating constructor muhahahah )\n  useState(()=> {\n    const fullField = formApi.getFullField(field);\n    logger('Initial Register', fullField);\n    updater.register(field, fieldState, { field: fullField, fieldApi, fieldState, notify, keepState });\n  });\n\n  logger('Render', formApi.getFullField(field), fieldState);\n\n  const internalRef = useRef(null);\n\n  const ref = React.useMemo(() => userRef || internalRef, []);\n\n  // We want to register and deregister this field when field name changes\n  useEffect(\n    () => {\n      const fullField = formApi.getFullField(field);\n      logger('Register', fullField);\n      updater.register(field, fieldState, { field: fullField, fieldApi, fieldState, notify, keepState });\n\n      return () => {\n        logger('Deregister', fullField);\n        updater.deregister(field);\n      };\n    },\n    // This is VERYYYY!! Important!\n    [field]\n  );\n\n  // We want to let the controller know of changes on this field when specific props change\n  useEffect(\n    () => {\n      const fullField = formApi.getFullField(field);\n      logger('Update', field);\n      updater.update(field, { field: fullField, fieldApi, fieldState, notify, keepState });\n    },\n    // This is VERYYYY!! Important!\n    [validate, validateOnChange, validateOnBlur, onValueChange]\n  );\n\n  // Maintain cursor position\n  useLayoutEffect(\n    () => {\n      if ( maintainCursor && ref.current != null && getCursor()) ref.current.selectionEnd = getCursor() + getCursorOffset();\n    },\n    [value]\n  );\n\n  // for debugging\n  useLayoutEffect(\n    () => {\n      if (debug && ref) {\n        ref.current.style.border = '5px solid orange';\n        setTimeout(() => {\n          ref.current.style.borderWidth ='2px';\n          ref.current.style.borderStyle = 'inset';\n          ref.current.style.borderColor = 'initial';\n          ref.current.style.borderImage = 'initial';\n        }, 500);\n      }\n    }\n  );\n\n  // This is an awesome optimization!!\n  const shouldUpdate = [ ...Object.values(fieldState), ...Object.values(fieldProps), ...Object.values(userProps) ];\n\n  const render = (children) => useMemo(() => children, [ ...shouldUpdate ]);\n\n  return { fieldState, fieldApi, render, ref, userProps };\n\n}\n\nexport default useField;\n","import React, { useState } from 'react';\nimport useField from '../hooks/useField';\n\nconst asField = Component =>  {\n  \n  const forwardRef = React.forwardRef(( props, userRef ) => {\n\n    const { fieldState, fieldApi, render, ref, userProps } = useField(props, userRef);\n\n    return render(\n      <Component\n        fieldApi={fieldApi}\n        fieldState={fieldState}\n        field={props.field}\n        forwardedRef={ref}\n        debug={props.debug}\n        type={props.type}\n        {...userProps}\n      />\n    );\n  });\n  \n  // const name = Component.displayName || Component.name;\n  // forwardRef.displayName = name; \n\n  return forwardRef;\n};\n\nexport default asField;\n","import React, {useLayoutEffect} from 'react';\nimport asField from '../../HOC/asField';\nimport Debug from '../../debug';\nconst logger = Debug('informed:Text' + '\\t');\n\nconst Text = ({ fieldApi, fieldState, ...props }) => {\n  const { maskedValue } = fieldState;\n  const { setValue, setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    forwardedRef,\n    debug,\n    ...rest\n  } = props;\n\n  logger('Render', field);\n\n  // for debugging\n  useLayoutEffect(\n    () => {\n      if (debug && forwardedRef) {\n        forwardedRef.current.style.background = 'red';\n        setTimeout(() => {\n          forwardedRef.current.style.background = 'white';\n        }, 500);\n      }\n    }\n  );\n\n  return (\n    <input\n      {...rest}\n      name={field}\n      ref={forwardedRef}\n      value={!maskedValue && maskedValue !== 0 ? '' : maskedValue}\n      onChange={e => {\n        setValue(e.target.value, e );\n        if (onChange) {\n          onChange(e);\n        }\n      }}\n      onBlur={e => {\n        setTouched(true);\n        if (onBlur) {\n          onBlur(e);\n        }\n      }}\n    />\n  );\n};\n\nexport { Text as BasicText };\n\nexport default asField(Text);\n","import React from 'react';\nimport withRadioGroup from '../../HOC/withRadioGroup';\n\nconst Radio = ({ radioGroupApi, radioGroupState, ...props }) => {\n  const { value: groupValue } = radioGroupState;\n  const {\n    setValue,\n    setTouched,\n    onChange: groupOnChange,\n    onBlur: groupOnBlur\n  } = radioGroupApi;\n  const {\n    value,\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    forwardedRef,\n    ...rest\n  } = props;\n  return (\n    <input\n      {...rest}\n      name={field}\n      ref={forwardedRef}\n      value={value}\n      checked={groupValue === value}\n      onChange={e => {\n        if (!e.target.checked) {\n          return;\n        }\n        setValue(value);\n        if (onChange) {\n          onChange(e);\n        }\n        if (groupOnChange) {\n          groupOnChange(e);\n        }\n      }}\n      onBlur={e => {\n        setTouched(true);\n        if (onBlur) {\n          onBlur(e);\n        }\n        if (groupOnBlur) {\n          groupOnBlur(e);\n        }\n      }}\n      type=\"radio\"\n    />\n  );\n};\n\nexport { Radio as BasicRadio };\n\nexport default withRadioGroup(Radio);\n","import React, { useLayoutEffect } from 'react';\nimport asField from '../../HOC/asField';\n\nconst TextArea = ({ fieldApi, fieldState, ...props }) => {\n  const { maskedValue } = fieldState;\n  const { setValue, setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    forwardedRef,\n    debug,\n    ...rest\n  } = props;\n\n\n  // for debugging\n  useLayoutEffect(\n    () => {\n      if (debug && forwardedRef) {\n        forwardedRef.current.style.background = 'red';\n        setTimeout(() => {\n          forwardedRef.current.style.background = 'white';\n        }, 500);\n      }\n    }\n  );\n\n  return (\n    <textarea\n      {...rest}\n      name={field}\n      ref={forwardedRef}\n      value={!maskedValue ? '' : maskedValue}\n      onChange={e => {\n        setValue(e.target.value, e);\n        if (onChange) {\n          onChange(e);\n        }\n      }}\n      onBlur={e => {\n        setTouched(true);\n        if (onBlur) {\n          onBlur(e);\n        }\n      }}\n    />\n  );\n};\n\nexport { TextArea as BasicTextArea };\n\nexport default asField(TextArea);\n","import React, { useLayoutEffect } from 'react';\nimport asField from '../../HOC/asField';\n\nclass Select extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.selectRef = React.createRef();\n  }\n\n  handleChange(e) {\n    let selected = [...(this.props.forwardedRef || this.selectRef).current]\n      .filter(option => option.selected)\n      .map(option => option.value);\n\n    this.props.fieldApi.setValue(\n      this.props.multiple ? selected : selected[0] || ''\n    );\n\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  // for debugging\n  componentDidUpdate(){\n    if (this.props.debug && this.props.forwardedRef) {\n      this.props.forwardedRef.current.style.background = 'red';\n      setTimeout(() => {\n        this.props.forwardedRef.current.style.background = 'white';\n      }, 500);\n    }\n  }\n\n  render() {\n    const { fieldApi, fieldState, ...props } = this.props;\n    const { value } = fieldState;\n    const { setValue, setTouched } = fieldApi;\n    const {\n      onChange,\n      onBlur,\n      field,\n      initialValue,\n      forwardedRef,\n      debug,\n      children,\n      multiple,\n      ...rest\n    } = props;\n\n    return (\n      <select\n        {...rest}\n        multiple={multiple}\n        name={field}\n        ref={forwardedRef || this.selectRef}\n        value={value || (multiple ? [] : '')}\n        onChange={this.handleChange}\n        onBlur={e => {\n          setTouched(true);\n          if (onBlur) {\n            onBlur(e);\n          }\n        }}>\n        {children}\n      </select>\n    );\n  }\n}\n\nexport { Select as BasicSelect };\n\nexport default asField(Select);\n","import React from 'react';\n\nconst Option = ({ value, forwardedRef, children, ...rest }) => {\n  return (\n    <option ref={forwardedRef} value={value} key={value} {...rest}>\n      {children}\n    </option>\n  );\n};\n\nexport default Option;\n","import React, { useLayoutEffect } from 'react';\nimport asField from '../../HOC/asField';\n\nconst Checkbox = ({ fieldApi, fieldState, ...props }) => {\n  const { value } = fieldState;\n  const { setValue, setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    debug,\n    forwardedRef,\n    ...rest\n  } = props;\n  return (\n    <input\n      {...rest}\n      name={field}\n      ref={forwardedRef}\n      checked={!!value}\n      onChange={e => {\n        setValue(e.target.checked);\n        if (onChange) {\n          onChange(e);\n        }\n      }}\n      onBlur={e => {\n        setTouched(true);\n        if (onBlur) {\n          onBlur(e);\n        }\n      }}\n      type=\"checkbox\"\n    />\n  );\n};\n\nexport { Checkbox as BasicCheckbox };\n\nexport default asField(Checkbox);\n","import React, { Component } from 'react';\nimport { GroupContext } from '../../Context';\n\nimport asField from '../../HOC/asField';\n\nclass RadioGroup extends Component {\n  get groupContext() {\n    return {\n      radioGroupApi: {\n        ...this.props.fieldApi,\n        onChange: this.props.onChange,\n        onBlur: this.props.onBlur\n      },\n      radioGroupState: this.props.fieldState\n    };\n  }\n\n  render() {\n    return (\n      <GroupContext.Provider value={this.groupContext}>\n        {this.props.children}\n      </GroupContext.Provider>\n    );\n  }\n}\n\nexport { RadioGroup as BasicRadioGroup };\n\nexport default asField(RadioGroup);\n","import Form from './components/Form';\nimport Scope from './components/Scope';\nimport ArrayField from './components/ArrayField';\nimport FormProvider from './components/FormProvider';\n\nimport withFormApi from './HOC/withFormApi';\nimport withFormState from './HOC/withFormState';\nimport withFieldState from './HOC/withFieldState';\nimport withFieldApi from './HOC/withFieldApi';\nimport withRadioGroup from './HOC/withRadioGroup';\nimport asField from './HOC/asField';\n\nimport useForm from './hooks/useForm';\nimport useField from './hooks/useField';\nimport useFieldApi from './hooks/useFieldApi';\nimport useFieldState from './hooks/useFieldState';\nimport useFormApi from './hooks/useFormApi';\nimport useFormState from './hooks/useFormState';\n\nimport Text from './components/form-fields/Text';\nimport Radio from './components/form-fields/Radio';\nimport TextArea from './components/form-fields/TextArea';\nimport Select from './components/form-fields/Select';\nimport Option from './components/form-fields/Option';\nimport Checkbox from './components/form-fields/Checkbox';\nimport RadioGroup from './components/form-fields/RadioGroup';\n\nimport { BasicText } from './components/form-fields/Text';\nimport { BasicRadio } from './components/form-fields/Radio';\nimport { BasicRadioGroup } from './components/form-fields/RadioGroup';\nimport { BasicTextArea } from './components/form-fields/TextArea';\nimport { BasicSelect } from './components/form-fields/Select';\nimport { BasicCheckbox } from './components/form-fields/Checkbox';\n\nexport {\n  Form,\n  FormProvider,\n  withFormApi,\n  withFormState,\n  withFieldApi,\n  withFieldState,\n  withRadioGroup,\n  asField,\n  useForm, \n  useField,\n  useFieldApi,\n  useFieldState,\n  useFormApi,\n  useFormState,\n  Text,\n  Radio,\n  TextArea,\n  Select,\n  Option,\n  Checkbox,\n  RadioGroup,\n  BasicText,\n  BasicRadio,\n  BasicRadioGroup,\n  BasicTextArea,\n  BasicSelect,\n  BasicCheckbox,\n  Scope,\n  ArrayField,\n};\n","module.exports = require(\"events\");","module.exports = require(\"lodash/get\");","module.exports = require(\"lodash/has\");","module.exports = require(\"lodash/pull\");","module.exports = require(\"lodash/pullAt\");","module.exports = require(\"lodash/setWith\");","module.exports = require(\"lodash/toPath\");","module.exports = require(\"lodash/unset\");","module.exports = require(\"lodash/values\");","module.exports = require(\"react\");"],"sourceRoot":""}